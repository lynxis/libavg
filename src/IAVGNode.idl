//
// $Id$
//

#include "nsISupports.idl"
#include "IAVGJSPoint.idl"

/**
 * Base interface for all scene elements. Attributes of every node in 
 * the .avg file can be changed by accessing them through the 
 * corresponding IAVGNode interface. In addition to the node interface 
 * itself, additional cababilities may be available through IAVGVideo,
 * IAVGWords or IAVGExcl, depending on the type of the node.
 *
 * Nodes in an avg file are organized in a hierarchy, with 
 * avg and excl nodes forming groups containing image, video and word nodes.
 */
[scriptable, uuid(ff6cfc9e-085e-474e-8aae-4eda7741ea94)]
interface IAVGNode : nsISupports
{
    // Node types
    const long NT_IMAGE=1;
    const long NT_AVG=2;
    const long NT_VIDEO=3;
    const long NT_TEXT=5;
    const long NT_EXCL=6;
    const long NT_CAMERA=7;
    const long NT_DIV=8;
    const long NT_PANOIMAGE=9;
 
    /**
     * Returns the unique id that can be used to reference the node.
     */
    string getID();
    /**
     * Returns one of the NT_xxx constants NT_IMAGE, NT_AVG, NT_VIDEO, 
     * NT_TEXT, NT_CAMERA, NT_DIV or NT_EXCL.
     */
    long getType();
    /**
     * If the node is a grouping node (NT_AVG, NT_DIV or NT_EXCL), returns the 
     * number of children. If not, returns 0.
     */
    long getNumChildren();
    /**
     * Returns the ith child node.
     */
    IAVGNode getChild(in long i);
//    void removeChild(in long i);
//    void addChild(in IAVGNode childNode);
    /**
     * Returns the parent node, if there is one.
     */
    IAVGNode getParent();

    long getNumVerticesX();
    long getNumVerticesY();
    IAVGJSPoint getOrigVertexCoord(in long x, in long y);
    IAVGJSPoint getWarpedVertexCoord(in long x, in long y);
    void setWarpedVertexCoord(in long x, in long y, in IAVGJSPoint Vertex);
   
    /**
     * The x position of the node relative to its parent node. Negative values
     * are allowed and cause the element to be clipped.
     */
    attribute float x;
    /**
     * The y position of the node relative to its parent node. Negative values
     * are allowed and cause the element to be clipped.
     */
    attribute float y;
    /**
     * The z position of the node. This is used to determine which nodes
     * are displayed on top of other nodes. The z value only has an effect
     * on direct siblings. Nodes in different groups are rendered according to
     * the z-ordering of the group nodes.
     */
    attribute long z;
    /**
     * The width of the node. For bitmaps, this is immutable and should not 
     * be changed. For avg nodes, this value determines the clipping
     * rectangle of the children.
     */
    attribute float width;
    /**
     * The height of the node. For bitmaps, this is immutable and should not 
     * be changed. For avg nodes, this value determines the clipping
     * rectangle of the children.
     */
    attribute float height;
    /**
     * Opacity ranges from 0.0 to 1.0 and is relative to the parent's opacity.
     */
    attribute float opacity;
    /**
     * Angle is the amount the node should be rotated in degrees. Invalid for
     * avg and excl nodes. If pivotx and pivoty aren't set, the node is rotated
     * around its center point.
     */
    attribute float angle;
    /**
     * The x coordinate of the point the node is rotated around.
     */
    attribute float pivotx;
    /**
     * The y coordinate of the point the node is rotated around.
     */
    attribute float pivoty;
    
};

